{"mappings":"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","sources":["src/api.js","src/createMarkup.js","src/index.js"],"sourcesContent":["async function fetchPeople(page = 1) {\n    const BASE_URL = 'https://swapi.dev/api';\n    const END_POINT = \"/people/\";\n    const resp = await fetch(`${BASE_URL}${END_POINT}?page=${page}`)\n        if(!resp.ok){\n        throw new Error(resp.statusText)\n    }\n    return resp.json()\n    }\n\nasync function fetchPlanets(page = 1) {\n    const BASE_URL = 'https://swapi.dev/api';\n    const END_POINT = \"/planets/\";\n    const resp = await fetch(`${BASE_URL}${END_POINT}?page=${page}`)\n        if(!resp.ok){\n        throw new Error(resp.statusText)\n    }\n    return resp.json()\n}\n\nasync function fetchStarships(page = 1) {\n    const BASE_URL = 'https://swapi.dev/api';\n    const END_POINT = \"/starships/\";\n    const resp = await fetch(`${BASE_URL}${END_POINT}?page=${page}`)\n        if(!resp.ok){\n        throw new Error(resp.statusText)\n    }\n    return resp.json()\n    }\n\nexport { fetchPeople, fetchPlanets, fetchStarships, }\n\n","\nfunction createMarkupPeople (arr) {\n    return arr.map(({ name, mass, height, gender }) => `\n    <li class=\"card\">\n      <h2>${name}</h2>\n      <p>${mass}</p>\n      <p>${height}</p>\n      <p>${gender}</p>\n    </li>`)\n    .join('')\n}\n\nfunction createMarkupPlanets (arr) {\n    return arr.map(({ name, diameter, population, rotation_period }) => `\n    <li class=\"card\">\n      <h2>${name}</h2>\n      <p>${diameter}</p>\n      <p>${population}</p>\n      <p>${rotation_period}</p>\n    </li>`)\n    .join('')\n}\n\nfunction createMarkupStarships (arr) {\n    return arr.map(({ name, length, model, passengers }) => `\n    <li class=\"card\">\n      <h2>${name}</h2>\n      <p>${length}</p>\n      <p>${model}</p>\n      <p>${passengers}</p>\n    </li>`)\n    .join('')\n}\n\nexport { createMarkupPeople, createMarkupPlanets, createMarkupStarships }","import { fetchPeople, fetchPlanets, fetchStarships } from \"./api\";\nimport { createMarkupPeople, createMarkupPlanets, createMarkupStarships } from \"./createMarkup\";\n\nconst selectors = {\n    container: document.querySelector('.js-container'),\n    list: document.querySelector('.list'),\n    people: document.querySelector('.js-people'),\n    planets: document.querySelector('.js-planets'),\n    starships: document.querySelector('.js-starships'),\n    load: document.querySelector('.js-load-more'),\n}\nlet pagePeople = 1;\nlet pagePlanets = 1;\nlet pageStarships = 1;\n\nselectors.load.addEventListener('click', onLoadMore);\n\nselectors.people.addEventListener('click', () => {\n    fetchPeople().then((data) => {\n        selectors.container.innerHTML = createMarkupPeople(data.results);\n        selectors.load.dataset.current = 'people';\n    })\n})\n\nselectors.planets.addEventListener('click', () => {\n    fetchPlanets().then((data) => {\n        selectors.container.innerHTML = createMarkupPlanets(data.results);\n        selectors.load.dataset.current = 'planets';\n    })\n})\n\nselectors.starships.addEventListener('click', () => {\n    fetchStarships().then((data) => {\n        selectors.container.innerHTML = createMarkupStarships(data.results);\n        selectors.load.dataset.current = 'starships'\n    })\n})\n\nfunction onLoadMore() {\n    switch (selectors.load.dataset.current) {\n        case 'people': \n        pagePeople += 1;\n\n        fetchPeople(pagePeople)\n        .then(data => {\n        selectors.container.insertAdjacentHTML('beforeend', createMarkupPeople(data.results))\n        let totalPages = Math.ceil(data.count / 9);\n        if(totalPages >= pagePeople) {\n        selectors.load.hidden = false;\n}\n    })\n    break;\n    case 'planets':\n        pagePlanets += 1;\n        fetchPlanets(pagePlanets)\n        .then(data => {\n            selectors.container.insertAdjacentHTML('beforeend', createMarkupPlanets(data.results))\n            let totalPages = Math.ceil(data.count / 6);\n        if(totalPages >= pagePlanets) {\n            selectors.load.hidden = false;\n}\n    })\n    break;\n    case 'starships':\n        pageStarships += 1;\n        fetchStarships(pageStarships)\n        .then(data => {\n            selectors.container.insertAdjacentHTML('beforeend', createMarkupStarships(data.results))\n    })\n    let totalPages = Math.ceil(data.count / 4);\n        if(totalPages >= pageStarships) {\n            selectors.load.hidden = false;\n}\n}}\n\nfetchPeople()\n.then(data => {\n    console.log(data);\n    selectors.container.insertAdjacentHTML('beforeend', createMarkupPeople(data.results));\n    selectors.load.dataset.current = 'people';\n})\n.catch(err => console.log(err))\n\nfetchPlanets()\n.then(data => {\n    console.log(data);\n    selectors.container.insertAdjacentHTML('beforeend', createMarkupPlanets(data.results));\n    selectors.load.dataset.current = 'planets';\n})\n.catch(err => console.log(err))\n\nfetchStarships()\n.then(data => {\n    console.log(data);\n    selectors.container.insertAdjacentHTML('beforeend', createMarkupStarships(data.results));\n    selectors.load.dataset.current = 'starships';\n})\n.catch(err => console.log(err))"],"names":["async","$2107b7db86dec8d6$export$6869e714ac297225","page","resp","fetch","ok","Error","statusText","json","$2107b7db86dec8d6$export$2b13323698666579","$2107b7db86dec8d6$export$4d8fd363d792fc25","$fdd6bbb96af63f6e$export$b11d329c469b890a","arr","map","name","mass","height","gender","join","$fdd6bbb96af63f6e$export$452cc45ac64e2e13","diameter","population","rotation_period","$fdd6bbb96af63f6e$export$ce3a68f4b8b12334","length","model","passengers","$1f0dc3b9307be026$var$selectors","container","document","querySelector","list","people","planets","starships","load","$1f0dc3b9307be026$var$pagePeople","$1f0dc3b9307be026$var$pagePlanets","$1f0dc3b9307be026$var$pageStarships","addEventListener","dataset","current","then","data","insertAdjacentHTML","results","Math","ceil","count","hidden","innerHTML","console","log","catch","err"],"version":3,"file":"index.43f4b9ae.js.map"}